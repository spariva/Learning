-- 1
DECLARE
    CURSOR DEPT IS SELECT DNOMBRE, LOC FROM DEPART;
    V_DNOMBRE DEPART.DNOMBRE%TYPE;
    V_LOC DEPART.LOC%TYPE;

BEGIN
    OPEN DEPT;
    FETCH DEPT INTO V_DNOMBRE, V_LOC;

    WHILE DEPT%FOUND LOOP
        DBMS_OUTPUT.PUT_LINE(V_DNOMBRE || ' ' || V_LOC);
        FETCH DEPT INTO V_DNOMBRE, V_LOC;
    END LOOP;

    CLOSE DEPT;
END;
/

DECLARE
    CURSOR DEPT IS SELECT DNOMBRE, LOC FROM DEPART;
    V_DNOMBRE DEPART.DNOMBRE%TYPE;
    V_LOC DEPART.LOC%TYPE;

BEGIN
    OPEN DEPT;

    LOOP
        FETCH DEPT INTO V_DNOMBRE, V_LOC;
        EXIT WHEN DEPT%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_DNOMBRE || ' ' || V_LOC);
    END LOOP;

    CLOSE DEPT;
END;
/


-- 2
DECLARE
    CURSOR EMPLEADOS IS SELECT APELLIDO FROM EMPLE WHERE DEPT_NO = 20;
    V_APELLIDO EMPLE.APELLIDO%TYPE;

BEGIN
    OPEN EMPLEADOS;

    LOOP
        FETCH EMPLEADOS INTO V_APELLIDO;
        EXIT WHEN EMPLEADOS%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(EMPLEADOS%ROWCOUNT || '. ' || V_APELLIDO);
    END LOOP;

    CLOSE EMPLEADOS;
END;
/


-- 3
CREATE OR REPLACE PROCEDURE VER_EMPLEADOS(V_DEPT_NO NUMBER) IS
    CURSOR EMPLEADOS IS SELECT APELLIDO FROM EMPLE WHERE DEPT_NO = V_DEPT_NO;
    V_APELLIDO EMPLE.APELLIDO%TYPE;

BEGIN
    OPEN EMPLEADOS;

    LOOP
        FETCH EMPLEADOS INTO V_APELLIDO;
        EXIT WHEN EMPLEADOS%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_APELLIDO);
    END LOOP;

    CLOSE EMPLEADOS;
END;
/
EXECUTE VER_EMPLEADOS(10);
EXECUTE VER_EMPLEADOS(20);
EXECUTE VER_EMPLEADOS(30);


-- 4
DECLARE
    CURSOR EMPLEADOS IS SELECT APELLIDO, OFICIO, COMISION FROM EMPLE WHERE SALARIO > 500;

BEGIN
    FOR I IN EMPLEADOS LOOP
        DBMS_OUTPUT.PUT_LINE(I.APELLIDO || ' ' || I.OFICIO || ' ' || I.COMISION);
    END LOOP;
    
END;
/


-- 5
DECLARE
    CURSOR EMPLEADOS IS SELECT APELLIDO, OFICIO, FECHA_ALT FROM EMPLE ORDER BY FECHA_ALT;

BEGIN
    FOR I IN EMPLEADOS LOOP
        DBMS_OUTPUT.PUT_LINE(I.APELLIDO || ' ' || I.OFICIO || ' ' || I.FECHA_ALT);
    END LOOP;

END;
/


-- 6
CREATE OR REPLACE PROCEDURE SUBIR_SUELDO(
    V_DEPT_NO NUMBER, PORCENTAJE NUMBER
)
IS
    CURSOR EMPLEADOS IS SELECT SALARIO FROM EMPLE WHERE V_DEPT_NO = DEPT_NO FOR UPDATE OF SALARIO;

BEGIN
    FOR I IN EMPLEADOS LOOP
        UPDATE EMPLE
            SET SALARIO = SALARIO * (1 + (PORCENTAJE / 100))
            WHERE CURRENT OF EMPLEADOS;

    END LOOP;
    
END;
/
EXECUTE SUBIR_SUELDO(20, 100);


-- 7
CREATE OR REPLACE PROCEDURE VER_EMPLEADOS
IS
    CURSOR EMPLEADOS IS SELECT APELLIDO, FECHA_ALT FROM EMPLE ORDER BY APELLIDO;

BEGIN
    FOR I IN EMPLEADOS LOOP
        DBMS_OUTPUT.PUT_LINE(I.APELLIDO || ' ' || I.FECHA_ALT);
    END LOOP;

END;
/
EXECUTE VER_EMPLEADOS();


-- 8
CREATE OR REPLACE PROCEDURE CONTAR_DEPT
IS
    CURSOR c8 IS SELECT COUNT(APELLIDO) "NUM", DNOMBRE FROM EMPLE E, DEPART D WHERE E.DEPT_NO = D.DEPT_NO GROUP BY DNOMBRE ORDER BY DNOMBRE;
    v_emple c8%rowtype;
BEGIN
    open c8;
    fetch c8 into v_emple;
    while c8%found loop
      DBMS_OUTPUT.PUT_LINE(v_emple.DNOMBRE || ' ' || v_emple.NUM);
        fetch c8 into v_emple;
    end loop;

END;
/
EXECUTE CONTAR_DEPT();


-- 9
CREATE OR REPLACE PROCEDURE PRIMEROS_CINCO
IS
    CURSOR EMPLEADOS IS SELECT APELLIDO, SALARIO FROM EMPLE ORDER BY SALARIO DESC;
    CONTADOR NUMBER := 0;

BEGIN
    FOR I IN EMPLEADOS LOOP
        EXIT WHEN CONTADOR = 5;
        DBMS_OUTPUT.PUT_LINE(I.APELLIDO || ' ' || I.SALARIO);
        CONTADOR := CONTADOR + 1;
    END LOOP;

END;
/
EXECUTE PRIMEROS_CINCO();


-- 10
CREATE OR REPLACE PROCEDURE CADA_OFICIO_DOS_MENOS
IS
    CURSOR EMPLEADOS IS SELECT APELLIDO, SALARIO, OFICIO FROM EMPLE ORDER BY OFICIO, SALARIO;
    CONTADOR NUMBER := 0;
    OFICIO EMPLE.OFICIO%TYPE;

BEGIN
    FOR I IN EMPLEADOS LOOP
        IF CONTADOR != 2 THEN
            DBMS_OUTPUT.PUT_LINE(I.OFICIO || ' ' || I.APELLIDO || ' ' || I.SALARIO);
            CONTADOR := CONTADOR + 1;
            OFICIO := I.OFICIO;

        ELSIF OFICIO != I.OFICIO THEN
            CONTADOR := 0;
           
        END IF;  
    END LOOP;

END;
/
EXECUTE CADA_OFICIO_DOS_MENOS();

-- 11
CREATE OR REPLACE PROCEDURE LISTADO
IS
    CURSOR EMPLEADOS IS SELECT APELLIDO, SALARIO, DEPT_NO FROM EMPLE ORDER BY DEPT_NO, SALARIO;
    DEPT EMPLE.DEPT_NO%TYPE := 0;
    NUM_EMPLEADOS NUMBER := 0;
    TOTAL_EMPLEADOS NUMBER := 0;
    SUM_SALARIOS EMPLE.SALARIO%TYPE := 0;
    TOTAL_SALARIOS EMPLE.SALARIO%TYPE := 0;


BEGIN
    FOR I IN EMPLEADOS LOOP
        IF DEPT = 0 THEN
            DEPT := I.DEPT_NO;
        ELSIF DEPT != I.DEPT_NO THEN
            DBMS_OUTPUT.PUT_LINE('*** DEPTO: ' || DEPT || ' NUM. EMPLEADOS: ' || NUM_EMPLEADOS || ' SUM. SALARIOS: ' || SUM_SALARIOS);
            DEPT := 0;
            NUM_EMPLEADOS := 0;
            SUM_SALARIOS := 0;
            
        END IF;

        NUM_EMPLEADOS := NUM_EMPLEADOS + 1;
        TOTAL_EMPLEADOS := TOTAL_EMPLEADOS + 1;
        SUM_SALARIOS := SUM_SALARIOS + I.SALARIO;
        TOTAL_SALARIOS := TOTAL_SALARIOS + I.SALARIO;

        DBMS_OUTPUT.PUT_LINE(I.APELLIDO || ' * ' || I.SALARIO);
        
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('*** DEPTO: ' || DEPT || ' NUM. EMPLEADOS: ' || NUM_EMPLEADOS || ' SUM. SALARIOS: ' || SUM_SALARIOS);

    DBMS_OUTPUT.PUT_LINE('******** NUMERO TOTAL EMPLEADOS: ' || TOTAL_EMPLEADOS || ' TOTAL SALARIOS: ' || TOTAL_SALARIOS);

END;
/
EXECUTE LISTADO();